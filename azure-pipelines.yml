# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main  # Se ejecuta cuando hay cambios en la rama 'main'

pool:
  name: Default  # Nombre del pool de agentes auto-hospedados
  demands:
    - agent.name -equals FREYZZER-VALENC  # Aseg√∫rate de usar el nombre correcto de tu agente

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '18.x'  # Usa Node.js 18 para compilar React

- script: |
    echo "üì¶ Instalando dependencias..."
    npm install

    echo "‚ö° Generando build de React..."
    npm run build
  displayName: 'Instalar dependencias y construir la app'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "üìÅ Contenido del directorio 'build':"
      Get-ChildItem -Path ./dist -Recurse

      Write-Host "üîê Configurando credenciales de AWS..."
      [System.Environment]::SetEnvironmentVariable("AWS_ACCESS_KEY_ID", "$(AWS_ACCESS_KEY_ID)", "Process")
      [System.Environment]::SetEnvironmentVariable("AWS_SECRET_ACCESS_KEY", "$(AWS_SECRET_ACCESS_KEY)", "Process")

      Write-Host "‚òÅÔ∏è Subiendo archivos a S3..."
      & "C:\Program Files\Amazon\AWSCLIV2\aws.exe" s3 sync ./dist s3://mi-frontend-s3 --delete --region us-east-2

      Write-Host "üåÄ Limpiando la cach√© de CloudFront..."
      & "C:\Program Files\Amazon\AWSCLIV2\aws.exe" cloudfront create-invalidation --distribution-id E19AWFGK4NV1FF --paths "/*"
  displayName: 'Desplegar en S3 y limpiar la cach√© de CloudFront'
